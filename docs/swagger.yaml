basePath: /
definitions:
  handlers.ErrorResponse:
    properties:
      code:
        type: integer
      data: {}
      message:
        type: string
    type: object
  handlers.Response:
    properties:
      data: {}
      message:
        type: string
    type: object
  handlers.UpdateProjectRequest:
    properties:
      accessTime:
        example: "2027-03-03T08:15:00Z"
        type: string
      name:
        example: bla-bla-bla.com
        type: string
    type: object
  models.Project:
    properties:
      id:
        example: 66
        type: integer
      name:
        example: bla-bla-bla.com
        type: string
      token:
        example: 38fa45ebb919g5d966122bf9g42a38ceb1e4f6eddf1da70ef00afbdc38197d8f
        type: string
      userId:
        example: 666
        type: integer
    type: object
  transform.CreateProjectRequest:
    properties:
      name:
        example: bla-bla-bla.com
        type: string
      userId:
        example: 66
        type: integer
    type: object
host: localhost:8082
info:
  contact:
    name: Artem Kostenko
    url: https://github.com/aerosystems
  description: A part of microservice infrastructure, who responsible for managing
    user Projects
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  title: Project Service
  version: 1.0.6
paths:
  /v1/projects:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/handlers.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/models.Project'
                  type: array
              type: object
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      security:
      - BearerAuth: []
      summary: get all projects. Result depends on user role
      tags:
      - projects
    post:
      consumes:
      - application/json
      parameters:
      - description: raw request body
        in: body
        name: comment
        required: true
        schema:
          $ref: '#/definitions/transform.CreateProjectRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/handlers.Response'
            - properties:
                data:
                  $ref: '#/definitions/models.Project'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      security:
      - BearerAuth: []
      summary: create project
      tags:
      - projects
  /v1/projects/{projectID}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: Project ID
        in: path
        name: projectID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      security:
      - BearerAuth: []
      summary: delete project by Project ID
      tags:
      - projects
    get:
      consumes:
      - application/json
      parameters:
      - description: Project ID
        in: path
        name: projectID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/handlers.Response'
            - properties:
                data:
                  $ref: '#/definitions/models.Project'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      security:
      - BearerAuth: []
      summary: get project by Project ID
      tags:
      - projects
    patch:
      consumes:
      - application/json
      parameters:
      - description: Project ID
        in: path
        name: projectID
        required: true
        type: string
      - description: raw request body
        in: body
        name: comment
        required: true
        schema:
          $ref: '#/definitions/handlers.UpdateProjectRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/handlers.Response'
            - properties:
                data:
                  $ref: '#/definitions/models.Project'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      security:
      - BearerAuth: []
      summary: update project by Project ID
      tags:
      - projects
  /v1/token/validate:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "204":
          description: No Content
          schema:
            $ref: '#/definitions/handlers.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      security:
      - X-Api-Key: []
      summary: validate token
      tags:
      - token
securityDefinitions:
  BearerAuth:
    description: Should contain Access JWT Token, with the Bearer started
    in: header
    name: Authorization
    type: apiKey
  X-Api-Key:
    description: Should contain Token, digits and letters, 64 symbols length
    in: header
    name: X-Api-Key
    type: apiKey
swagger: "2.0"
